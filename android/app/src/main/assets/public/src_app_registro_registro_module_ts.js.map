{"version":3,"file":"src_app_registro_registro_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;;AAAzB,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;AACM;IAWxC,kBAAkB,SAAlB,kBAAkB;;AAAlB,kBAAkB;IAT9B,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,+DAAmB;YAC3B,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBmB;AAM1B;AACiB;AACsB;AACjB;IAOjC,YAAY,SAAZ,YAAY;IAIvB,YAAoB,MAAc,EAAS,WAAwB,EAAU,EAAe,EAAS,OAAsB,EAClH,eAAgC;QADrB,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,OAAE,GAAF,EAAE,CAAa;QAAS,YAAO,GAAP,OAAO,CAAe;QAClH,oBAAe,GAAf,eAAe,CAAiB;QACvC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAClD,UAAU,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACpD,sBAAsB,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACjE,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAEF;;;;;;;;;;;;;;;;;;;;;;;;;QAyBI;IAEH,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;aACvD,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,GAAC,CAAC;aACpD,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAEtC,CAAC;;;;;;;;;AAhDU,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qEAAmC;;KAEpC,CAAC;GACW,YAAY;AAAA","sources":["./src/app/registro/registro-routing.module.ts","./src/app/registro/registro.module.ts","./src/app/registro/registro.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistroPage } from './registro.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistroPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistroPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistroPageRoutingModule } from './registro-routing.module';\n\nimport { RegistroPage } from './registro.page';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegistroPageRoutingModule\n  ],\n  declarations: [RegistroPage]\n})\nexport class RegistroPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {NavController, AlertController } from '@ionic/angular';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.page.html',\n  styleUrls: ['./registro.page.scss'],\n})\nexport class RegistroPage  {\n\n  formularioRegistro: FormGroup;\n  \n  constructor(private router: Router,private userService: UserService , public fb: FormBuilder, public navCtrl: NavController,\n    public alertController: AlertController) {\n    this.formularioRegistro = this.fb.group({\n      'nombre': new FormControl(\"\", Validators.required),\n      'password': new FormControl(\"\", Validators.required),\n      'confirmacionPassword': new FormControl(\"\", Validators.required)\n    });\n  }\n\n  ngOnInit() {\n  }\n\n /* async guardar(){\n    var f = this.formularioRegistro.value;\n  \n    if(this.formularioRegistro.invalid || f.password !=f.confirmacionPassword){\n      const alert = await this.alertController.create({\n        header: 'Datos incompletos',\n        message: 'Tienes que llenar todos los datos',\n        buttons: ['Aceptar']\n      });\n\n  \n      await alert.present();\n      return;\n\n    } else{\n      this.navCtrl.navigateRoot('/login1');\n    }\n  \n    var usuario = {\n      nombre: f.nombre,\n      password: f.password\n    }\n\n    localStorage.setItem('usuario',JSON.stringify(usuario));\n   \n  }*/\n \n  onSubmit(){\n    this.userService.register(this.formularioRegistro.value)\n    .then(Response =>{this.router.navigate(['/login1'])})\n    .catch(error => console.log(error));\n\n  }\n\n\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}