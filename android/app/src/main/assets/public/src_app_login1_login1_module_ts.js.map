{"version":3,"file":"src_app_login1_login1_module_ts.js","mappings":"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","sources":["./src/app/api.service.ts","./src/app/auth.service.ts","./src/app/login1/login1-routing.module.ts","./src/app/login1/login1.module.ts","./src/app/login1/login1.page.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  login(nombre: string, password: string) {\n    return this.http.post('login1', { nombre, password });\n  }\n\n  \n  }\n","\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private _isLoggedIn$ = new BehaviorSubject<boolean>(false);\n  isLoggedIn$ = this._isLoggedIn$.asObservable();\n\n  constructor(private apiService: ApiService) {\n    const token = localStorage.getItem('usuario');\n    this._isLoggedIn$.next(!!token);\n  }\n\n  login(nombre: string, password: string) {\n    return this.apiService.login(nombre, password).pipe(\n      tap((response: any) => {\n        this._isLoggedIn$.next(true);\n        localStorage.setItem('usuario', response.token);\n      })\n    );\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Login1Page } from './login1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Login1Page\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Login1PageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Login1PageRoutingModule } from './login1-routing.module';\n\nimport { Login1Page } from './login1.page';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    Login1PageRoutingModule\n  ],\n  declarations: [Login1Page]\n})\nexport class Login1PageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { AuthService } from '../auth.service';\nimport { UserService } from '../user.service';\n@Component({\n  selector: 'app-login1',\n  templateUrl: './login1.page.html',\n  styleUrls: ['./login1.page.scss'],\n})\nexport class Login1Page  {\n  \n  formularioLogin: FormGroup;\n  constructor(private userService: UserService,private authService: AuthService, private router:Router,public fb: FormBuilder,\n    public alertController: AlertController) {\n      this.formularioLogin = this.fb.group({\n        'nombre': new FormControl(\"\",Validators.required),\n        'password': new FormControl(\"\",Validators.required)\n      })\n  \n     }\n\n  ngOnInit() {\n  }\n\n /*async ingresar(){\n   \n  var f = this.formularioLogin.value;\n\n  var usuario = JSON.parse(localStorage.getItem('usuario'));\n\n  if(usuario.nombre == f.nombre && usuario.password == f.password){\n    \n   console.log('Ingresado');\n     this.router.navigate(['/homelogin']);\n    // this.authService\n    // .login(this.formularioLogin.get('nombre')?.value, this.formularioLogin.get('password')?.value)\n    // .subscribe((response) => {\n    //   this.router.navigate(['/homelogin']);\n    // });\n }else{\n    const alert = await this.alertController.create({\n      header: 'Datos incorrectos',\n      message: 'Los datos que ingresaste son incorrectos.',\n      buttons: ['Aceptar']\n    }); \n\n    await alert.present();\n }\n\n\n}*/\n\n\n\n\nonSubmit(){\n  this.userService.loginapp(this.formularioLogin.value)\n  .then(Response =>{this.router.navigate(['/homelogin'])})\n  .catch(error => console.log(error));\n}\n\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}